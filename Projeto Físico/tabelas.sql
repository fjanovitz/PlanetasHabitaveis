-- Script: PROJETO GDI - PLANETAS HABITÁVEIS - CRIAÇÃO DE TABELAS
-- Script para criação de tabelas do projeto da cadeira de Gerenciamento de Dados e Informação

CREATE TABLE BuracoNegro (
    cod NUMBER GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    nome VARCHAR2(50),
    massa NUMBER(10, 4) -- em unidades de 10^30 toneladas
);

CREATE TABLE Galaxia (
    cod NUMBER GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    nome VARCHAR2(50),
    cod_BuracoNegro NUMBER UNIQUE NOT NULL,
    CONSTRAINT bn_galaxia_fk FOREIGN KEY (cod_BuracoNegro) REFERENCES BuracoNegro(cod)
);

CREATE TABLE Galaxia_Eliptica (
    cod NUMBER GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    semieixo_maior NUMBER(20, 4), -- em unidades de 10^3 anos luz
    semieixo_menor NUMBER(20, 4), -- em unidades de 10^3 anos luz
    dist_focal NUMBER(20, 4), -- em unidades de 10^3 anos luz
    CONSTRAINT galaxia_eliptica_fk FOREIGN KEY (cod) REFERENCES Galaxia(cod) -- pk eh iguak a pk de Galaxia
);

CREATE TABLE Galaxia_Espiral (
    cod NUMBER GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    raio NUMBER(20, 4), -- em unidades de 10^3 anos luz
    CONSTRAINT galaxia_espiral_fk FOREIGN KEY (cod) REFERENCES Galaxia(cod) -- pk eh iguak a pk de Galaxia
);

CREATE TABLE Galaxia_Irregular (
    cod NUMBER GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    formato VARCHAR2(20),
    CONSTRAINT galaxia_irregular_fk FOREIGN KEY (cod) REFERENCES Galaxia(cod) -- pk eh iguak a pk de Galaxia
);

CREATE TABLE SistemaSolar (
    cod NUMBER GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1) PRIMARY KEY, 
    nome VARCHAR2(50), 
    qtd_plan NUMBER,
    qtd_est NUMBER, 
    cod_galaxia NUMBER NOT NULL,
    CONSTRAINT galaxia_sistema_fk FOREIGN KEY (cod_galaxia) REFERENCES Galaxia(cod)
);

CREATE TABLE Estrela (
    cod NUMBER GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    nome VARCHAR2(50),
    raio NUMBER(20, 4),
    massa NUMBER(20, 4),
    tipo VARCHAR2(20),
    cod_sistema NUMBER,
    CONSTRAINT sistema_estrela_fk FOREIGN KEY (cod_sistema) REFERENCES SistemaSolar(cod)
);

CREATE TABLE Financiamento (
    cadastro NUMBER GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    valor NUMBER
);

CREATE TABLE Empresa (
    cod NUMBER GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    cad_financiamento NUMBER,
    nome VARCHAR2(50),
    CONSTRAINT financiamento_empresa_fk FOREIGN KEY (cad_financiamento) REFERENCES Financiamento(cadastro)
);

CREATE TABLE Pesquisa (
    registro NUMBER GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    titulo VARCHAR2(100),
    data_inicio DATE,
    data_fim DATE,
    descricao VARCHAR2(255)
);

CREATE TABLE Pesquisador (
    cadastro NUMBER GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    nome VARCHAR2(50),
    equipe VARCHAR2(25)
);

CREATE TABLE Instituicao (
    cod NUMBER GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    nome VARCHAR2(50),
    local VARCHAR2(50)
);

CREATE TABLE Elemento (
    formula VARCHAR2(8) PRIMARY KEY,
    nome VARCHAR2(25)
);

CREATE TABLE Planeta (
    cod NUMBER GENERATED BY DEFAULT AS IDENTITY(START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    nome VARCHAR2(50),
    massa NUMBER(20, 4), -- em megatoneladas (10^6 toneladas)
    raio NUMBER(15, 4),
    niv_radiacao NUMBER(8, 2),
    temp_media NUMBER(4, 2),
    amp_termica NUMBER(4, 2),
    dist_terra NUMBER(15, 2),
    pressao NUMBER(3, 2),
    cod_SistemaSolar NUMBER NOT NULL,
    CONSTRAINT sistema_planeta_fk FOREIGN KEY (cod_SistemaSolar) REFERENCES SistemaSolar(cod)
);

CREATE TABLE Lua (
    cod_planeta NUMBER,
    qtd NUMBER,
    nome VARCHAR2(50),
    massa NUMBER(20, 4), -- em megatoneladas (10^6 toneladas)
    dist_planeta NUMBER(15, 4),
    lua_primaria NUMBER, -- sub-luas
    CONSTRAINT lua_planeta_fk FOREIGN KEY (cod_planeta) REFERENCES Planeta(cod),
    CONSTRAINT lua_pk PRIMARY KEY (cod_planeta, qtd),
    CONSTRAINT luaprim_luasec_fk FOREIGN KEY (cod_planeta, qtd) REFERENCES Lua(cod_planeta, qtd)
);

CREATE TABLE Trabalha (
    data_inicio DATE,
    cad_pesquisador NUMBER,
    cod_instituicao NUMBER,
    CONSTRAINT trabalha_pk PRIMARY KEY (cad_pesquisador, cod_instituicao, data_inicio),
    CONSTRAINT pesquisador_trabalha_fk FOREIGN KEY (cad_pesquisador) REFERENCES Pesquisador(cadastro),
    CONSTRAINT instituicao_trabalha_fk FOREIGN KEY (cod_instituicao) REFERENCES Instituicao(cod)
);

CREATE TABLE Comp_Atmosferica (
    cod_planeta NUMBER,
    formula VARCHAR2(8),
    percentual NUMBER(2, 2),
    CONSTRAINT atmosfera_pk PRIMARY KEY (cod_planeta, formula),
    CONSTRAINT atm_elem_fk FOREIGN KEY (formula) REFERENCES Elemento(formula),
    CONSTRAINT atm_planeta_fk FOREIGN KEY (cod_planeta) REFERENCES Planeta(cod)
);

CREATE TABLE Estuda (
    cod_planeta NUMBER,
    cad_pesquisador NUMBER,
    reg_pesquisa NUMBER,
    CONSTRAINT estuda_pk PRIMARY KEY (cod_planeta, cad_pesquisador, reg_pesquisa),
    CONSTRAINT planeta_estuda_fk FOREIGN KEY (cod_planeta) REFERENCES Planeta(cod),
    CONSTRAINT pesquisador_estuda_fk FOREIGN KEY (cad_pesquisador) REFERENCES Pesquisador(cadastro),
    CONSTRAINT pesquisa_estuda_fk FOREIGN KEY (reg_pesquisa) REFERENCES Pesquisa(registro)
);

CREATE TABLE Recebe (
    cod_planeta NUMBER,
    cad_pesquisador NUMBER,
    reg_pesquisa NUMBER,
    cad_financiamento NUMBER,
    data_inicio DATE,
    duracao NUMBER, -- em meses
    CONSTRAINT recebe_pk PRIMARY KEY (cod_planeta, cad_pesquisador, reg_pesquisa, cad_financiamento),
    CONSTRAINT estuda_recebe_fk FOREIGN KEY (cod_planeta, cad_pesquisador, reg_pesquisa) REFERENCES Estuda(cod_planeta, cad_pesquisador, reg_pesquisa),
    CONSTRAINT financimento_recebe_fk FOREIGN KEY (cad_financiamento) REFERENCES Financiamento(cadastro)
);